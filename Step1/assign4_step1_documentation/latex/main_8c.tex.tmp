\hypertarget{main_8c}{}\doxysection{src/main.c File Reference}
\label{main_8c}\index{src/main.c@{src/main.c}}


Contains the the implementation of the Assignment4.  


{\ttfamily \#include $<$zephyr.\+h$>$}\newline
{\ttfamily \#include $<$device.\+h$>$}\newline
{\ttfamily \#include $<$devicetree.\+h$>$}\newline
{\ttfamily \#include $<$drivers/gpio.\+h$>$}\newline
{\ttfamily \#include $<$drivers/adc.\+h$>$}\newline
{\ttfamily \#include $<$drivers/pwm.\+h$>$}\newline
{\ttfamily \#include $<$sys/printk.\+h$>$}\newline
{\ttfamily \#include $<$sys/\+\_\+\+\_\+assert.\+h$>$}\newline
{\ttfamily \#include $<$string.\+h$>$}\newline
{\ttfamily \#include $<$timing/timing.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$hal/nrf\+\_\+saadc.\+h$>$}\newline
Include dependency graph for main.\+c\+:
% FIG 0
\doxysubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{main_8c_ab48b150a8660d0152dfde25b42c1755f}\label{main_8c_ab48b150a8660d0152dfde25b42c1755f}} 
\#define {\bfseries PWM0\+\_\+\+NID}~DT\+\_\+\+NODELABEL(pwm0)
\item 
\mbox{\Hypertarget{main_8c_a66e62e873d067860b696a1f47b60916a}\label{main_8c_a66e62e873d067860b696a1f47b60916a}} 
\#define {\bfseries BOARDLED\+\_\+\+PIN}~DT\+\_\+\+PROP(PWM0\+\_\+\+NID, ch0\+\_\+pin)
\item 
\mbox{\Hypertarget{main_8c_a6423a880df59733d2d9b509c7718d3a9}\label{main_8c_a6423a880df59733d2d9b509c7718d3a9}} 
\#define {\bfseries STACK\+\_\+\+SIZE}~1024
\item 
\mbox{\Hypertarget{main_8c_a5936222e9802dbe8ceb1e99bd667466a}\label{main_8c_a5936222e9802dbe8ceb1e99bd667466a}} 
\#define {\bfseries thread\+\_\+\+A\+\_\+prio}~1
\item 
\mbox{\Hypertarget{main_8c_aa9928aa4491a20c74a19c5904ba9530a}\label{main_8c_aa9928aa4491a20c74a19c5904ba9530a}} 
\#define {\bfseries thread\+\_\+\+B\+\_\+prio}~1
\item 
\mbox{\Hypertarget{main_8c_a1bd72aae8d0dd6e887547a1d5e0a8902}\label{main_8c_a1bd72aae8d0dd6e887547a1d5e0a8902}} 
\#define {\bfseries thread\+\_\+\+C\+\_\+prio}~1
\item 
\mbox{\Hypertarget{main_8c_a2ed7791f41bc6281906a0878492b0894}\label{main_8c_a2ed7791f41bc6281906a0878492b0894}} 
\#define {\bfseries thread\+\_\+\+A\+\_\+period}~10
\item 
\mbox{\Hypertarget{main_8c_a667158ed9af1b72bf062e54bda71dd4f}\label{main_8c_a667158ed9af1b72bf062e54bda71dd4f}} 
\#define {\bfseries ADC\+\_\+\+NID}~DT\+\_\+\+NODELABEL(adc)
\item 
\mbox{\Hypertarget{main_8c_a00978ca9e8220475258dcbbbb7d29129}\label{main_8c_a00978ca9e8220475258dcbbbb7d29129}} 
\#define {\bfseries ADC\+\_\+\+RESOLUTION}~10
\item 
\mbox{\Hypertarget{main_8c_a2bbc7e1578f01928d36ef7fa94ac4905}\label{main_8c_a2bbc7e1578f01928d36ef7fa94ac4905}} 
\#define {\bfseries ADC\+\_\+\+GAIN}~ADC\+\_\+\+GAIN\+\_\+1\+\_\+4
\item 
\mbox{\Hypertarget{main_8c_a317868c528ebe27fbca094a8bc2d910c}\label{main_8c_a317868c528ebe27fbca094a8bc2d910c}} 
\#define {\bfseries ADC\+\_\+\+REFERENCE}~ADC\+\_\+\+REF\+\_\+\+VDD\+\_\+1\+\_\+4
\item 
\mbox{\Hypertarget{main_8c_aeb8de5967ac4465f35317d818eeb129b}\label{main_8c_aeb8de5967ac4465f35317d818eeb129b}} 
\#define {\bfseries ADC\+\_\+\+ACQUISITION\+\_\+\+TIME}~ADC\+\_\+\+ACQ\+\_\+\+TIME(ADC\+\_\+\+ACQ\+\_\+\+TIME\+\_\+\+MICROSECONDS, 40)
\item 
\mbox{\Hypertarget{main_8c_a8bfca74ee546715af6682194ea92286a}\label{main_8c_a8bfca74ee546715af6682194ea92286a}} 
\#define {\bfseries ADC\+\_\+\+CHANNEL\+\_\+\+ID}~1
\item 
\mbox{\Hypertarget{main_8c_a5508ef7e762284248c2e87e16865522e}\label{main_8c_a5508ef7e762284248c2e87e16865522e}} 
\#define {\bfseries ADC\+\_\+\+CHANNEL\+\_\+\+INPUT}~NRF\+\_\+\+SAADC\+\_\+\+INPUT\+\_\+\+AIN1
\item 
\mbox{\Hypertarget{main_8c_a6b20d41d6252e9871430c242cb1a56e7}\label{main_8c_a6b20d41d6252e9871430c242cb1a56e7}} 
\#define {\bfseries BUFFER\+\_\+\+SIZE}~1
\item 
\mbox{\Hypertarget{main_8c_a70ed59adcb4159ac551058053e649640}\label{main_8c_a70ed59adcb4159ac551058053e649640}} 
\#define {\bfseries SIZE}~10
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{main_8c_aa25f5f9092ccf13998f3cb9e9e1d10a6}\label{main_8c_aa25f5f9092ccf13998f3cb9e9e1d10a6}} 
{\bfseries K\+\_\+\+THREAD\+\_\+\+STACK\+\_\+\+DEFINE} (thread\+\_\+\+A\+\_\+stack, STACK\+\_\+\+SIZE)
\item 
\mbox{\Hypertarget{main_8c_a8318aa1ed5939244957a68387085ddec}\label{main_8c_a8318aa1ed5939244957a68387085ddec}} 
{\bfseries K\+\_\+\+THREAD\+\_\+\+STACK\+\_\+\+DEFINE} (thread\+\_\+\+B\+\_\+stack, STACK\+\_\+\+SIZE)
\item 
\mbox{\Hypertarget{main_8c_a331fd55d9b95c3e662a4148fbc522271}\label{main_8c_a331fd55d9b95c3e662a4148fbc522271}} 
{\bfseries K\+\_\+\+THREAD\+\_\+\+STACK\+\_\+\+DEFINE} (thread\+\_\+\+C\+\_\+stack, STACK\+\_\+\+SIZE)
\item 
void \mbox{\hyperlink{main_8c_a61675a61bbec86901b2fe28f008e881c}{thread\+\_\+\+A\+\_\+code}} (void $\ast$argA, void $\ast$argB, void $\ast$argC)
\begin{DoxyCompactList}\small\item\em thread\+\_\+\+A\+\_\+code function implement the acquisition task \end{DoxyCompactList}\item 
void \mbox{\hyperlink{main_8c_a99cef2c8673e9c73162dd97f0247ca8e}{thread\+\_\+\+B\+\_\+code}} (void $\ast$argA, void $\ast$argB, void $\ast$argC)
\begin{DoxyCompactList}\small\item\em thread\+\_\+\+B\+\_\+code function implement the filtering task \end{DoxyCompactList}\item 
void \mbox{\hyperlink{main_8c_a6eec62f04743b40b6d744ecd2f31cdd2}{thread\+\_\+\+C\+\_\+code}} (void $\ast$argA, void $\ast$argB, void $\ast$argC)
\begin{DoxyCompactList}\small\item\em thread\+\_\+\+C\+\_\+code function shows the result by a LED \end{DoxyCompactList}\item 
void \mbox{\hyperlink{main_8c_a6288eba0f8e8ad3ab1544ad731eb7667}{main}} (void)
\begin{DoxyCompactList}\small\item\em main function run project \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Variables}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{main_8c_a6d4412666e45fbd3d7bb2e537e3e4921}\label{main_8c_a6d4412666e45fbd3d7bb2e537e3e4921}} 
struct k\+\_\+thread {\bfseries thread\+\_\+\+A\+\_\+data}
\item 
\mbox{\Hypertarget{main_8c_ad832c1a3de4a77b89216efc38eddcb72}\label{main_8c_ad832c1a3de4a77b89216efc38eddcb72}} 
struct k\+\_\+thread {\bfseries thread\+\_\+\+B\+\_\+data}
\item 
\mbox{\Hypertarget{main_8c_a9723f8aa3cfd56015ee57bc31879f8ec}\label{main_8c_a9723f8aa3cfd56015ee57bc31879f8ec}} 
struct k\+\_\+thread {\bfseries thread\+\_\+\+C\+\_\+data}
\item 
\mbox{\Hypertarget{main_8c_aaac68d6bd12397c115c8f5fb8b8dae16}\label{main_8c_aaac68d6bd12397c115c8f5fb8b8dae16}} 
k\+\_\+tid\+\_\+t {\bfseries thread\+\_\+\+A\+\_\+tid}
\item 
\mbox{\Hypertarget{main_8c_af2bd9deb85bd5ac0cdf3a0b077411289}\label{main_8c_af2bd9deb85bd5ac0cdf3a0b077411289}} 
k\+\_\+tid\+\_\+t {\bfseries thread\+\_\+\+B\+\_\+tid}
\item 
\mbox{\Hypertarget{main_8c_a3e9a231be3f7d1a28871ddfdf5ca8fe3}\label{main_8c_a3e9a231be3f7d1a28871ddfdf5ca8fe3}} 
k\+\_\+tid\+\_\+t {\bfseries thread\+\_\+\+C\+\_\+tid}
\item 
\mbox{\Hypertarget{main_8c_a82e13125c2f279157fcf738219ff21ba}\label{main_8c_a82e13125c2f279157fcf738219ff21ba}} 
struct k\+\_\+sem {\bfseries sem\+\_\+ab}
\item 
\mbox{\Hypertarget{main_8c_addc907d18e7e98a64a832ac1c7be5ad1}\label{main_8c_addc907d18e7e98a64a832ac1c7be5ad1}} 
struct k\+\_\+sem {\bfseries sem\+\_\+bc}
\item 
\mbox{\Hypertarget{main_8c_a80d0933bb7a6454573b3ade529a72418}\label{main_8c_a80d0933bb7a6454573b3ade529a72418}} 
struct k\+\_\+timer {\bfseries my\+\_\+timer}
\item 
\mbox{\Hypertarget{main_8c_a445f79326d40128ece59a749adff6894}\label{main_8c_a445f79326d40128ece59a749adff6894}} 
const struct device $\ast$ {\bfseries adc\+\_\+dev} = NULL
\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Contains the the implementation of the Assignment4. 

The goal of this code is to read an input voltage signal, filter it and show the result to the output by a PWM signal to a LED. In particular, this file contains the \mbox{\hyperlink{main_8c_a6288eba0f8e8ad3ab1544ad731eb7667}{main()}} function

\begin{DoxyAuthor}{Author}
Mattia Longo and Giacomo Bego 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
31 May 2022 
\end{DoxyDate}
\begin{DoxyRefDesc}{Bug}
\item[\mbox{\hyperlink{bug__bug000001}{Bug}}]No known bugs \end{DoxyRefDesc}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{main_8c_a6288eba0f8e8ad3ab1544ad731eb7667}\label{main_8c_a6288eba0f8e8ad3ab1544ad731eb7667}} 
\index{main.c@{main.c}!main@{main}}
\index{main@{main}!main.c@{main.c}}
\doxysubsubsection{\texorpdfstring{main()}{main()}}
{\footnotesize\ttfamily void main (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



main function run project 

main function sets the ADC, creates the tasks and initilizes the semaphores. \mbox{\Hypertarget{main_8c_a61675a61bbec86901b2fe28f008e881c}\label{main_8c_a61675a61bbec86901b2fe28f008e881c}} 
\index{main.c@{main.c}!thread\_A\_code@{thread\_A\_code}}
\index{thread\_A\_code@{thread\_A\_code}!main.c@{main.c}}
\doxysubsubsection{\texorpdfstring{thread\_A\_code()}{thread\_A\_code()}}
{\footnotesize\ttfamily void thread\+\_\+\+A\+\_\+code (\begin{DoxyParamCaption}\item[{void $\ast$}]{argA,  }\item[{void $\ast$}]{argB,  }\item[{void $\ast$}]{argC }\end{DoxyParamCaption})}



thread\+\_\+\+A\+\_\+code function implement the acquisition task 

Timing variables have been declared and calculated. This function occurs every 10 ms (periodic task). If the acquisition by the ADC gets a correct value, it pass the sample by a semaphore to task B, otherwise it set it to a \char`\"{}safety value\char`\"{} equal to zero.


\begin{DoxyParams}{Parameters}
{\em \mbox{[}$\ast$argA,$\ast$argB,$\ast$arg\+C\mbox{]}} & void pointer parameters (not used in this project) \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
void function-\/$>$ it does not return anything 
\end{DoxyReturn}
\mbox{\Hypertarget{main_8c_a99cef2c8673e9c73162dd97f0247ca8e}\label{main_8c_a99cef2c8673e9c73162dd97f0247ca8e}} 
\index{main.c@{main.c}!thread\_B\_code@{thread\_B\_code}}
\index{thread\_B\_code@{thread\_B\_code}!main.c@{main.c}}
\doxysubsubsection{\texorpdfstring{thread\_B\_code()}{thread\_B\_code()}}
{\footnotesize\ttfamily void thread\+\_\+\+B\+\_\+code (\begin{DoxyParamCaption}\item[{void $\ast$}]{argA,  }\item[{void $\ast$}]{argB,  }\item[{void $\ast$}]{argC }\end{DoxyParamCaption})}



thread\+\_\+\+B\+\_\+code function implement the filtering task 

Every new sample is taken from the shared memory and put into a vector from which we extract the average value of the last 10 samples. Then the goal of the task is to copy the starting vector into another vector except for the samples \char`\"{}more than 10\% far\char`\"{} form the average. At the end, a new average on the final vector has been done. The result is saved in another shared memory (global variable) and passed to the output task by another semaphore.


\begin{DoxyParams}{Parameters}
{\em \mbox{[}$\ast$argA,$\ast$argB,$\ast$arg\+C\mbox{]}} & void pointer parameters (not used in this project) \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
void function-\/$>$ it does not return anything 
\end{DoxyReturn}
\mbox{\Hypertarget{main_8c_a6eec62f04743b40b6d744ecd2f31cdd2}\label{main_8c_a6eec62f04743b40b6d744ecd2f31cdd2}} 
\index{main.c@{main.c}!thread\_C\_code@{thread\_C\_code}}
\index{thread\_C\_code@{thread\_C\_code}!main.c@{main.c}}
\doxysubsubsection{\texorpdfstring{thread\_C\_code()}{thread\_C\_code()}}
{\footnotesize\ttfamily void thread\+\_\+\+C\+\_\+code (\begin{DoxyParamCaption}\item[{void $\ast$}]{argA,  }\item[{void $\ast$}]{argB,  }\item[{void $\ast$}]{argC }\end{DoxyParamCaption})}



thread\+\_\+\+C\+\_\+code function shows the result by a LED 

This function gets the filtered result from task B and show the result so that it is proportional to a PWM duty cicle of a LED.


\begin{DoxyParams}{Parameters}
{\em \mbox{[}$\ast$argA,$\ast$argB,$\ast$arg\+C\mbox{]}} & void pointer parameters (not used in this project) \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
void function-\/$>$ it does not return anything 
\end{DoxyReturn}
